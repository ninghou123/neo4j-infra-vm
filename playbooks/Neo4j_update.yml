---
- name: Update Neo4j config on this VM and restart (with safeguards + report)
  hosts: neo4j
  serial: 1
  any_errors_fatal: true
  gather_facts: false

  become: "{{ neo4j_become }}"
  become_user: "{{ neo4j_become_user }}"
  become_flags: "-i"

  vars_files:
    - "{{ playbook_dir }}/../inventories/vars.yml"

  vars:
    neo4j_env:
      NEO4J_HOME: "{{ neo4j_home }}"
      NEO4J_CONF: "{{ neo4j_home }}/conf"
      PATH: "{{ neo4j_bin_dir }}:/usr/bin:/bin"
      JAVA_HOME: "{{ java_home }}"

  pre_tasks:
    # ... (unchanged pre_tasks)
    # everything above stays exactly the same
    # ----------------------------------------

  tasks:
    # ... (unchanged tasks)
    # ----------------------------------------

  handlers:
    # -------- BIN MODE (tarball script) --------
 
    - name: Start Neo4j (bin)
      listen: "restart neo4j (bin)"
      when: not (neo4j_use_service | bool)
      become: true
      become_user: neo4j
      become_flags: "-i"
      environment: "{{ neo4j_env }}"
      shell: |
        set -euo pipefail
        echo "== EFFECTIVE USER =="; whoami; id
        echo "== CWD =="; pwd
        echo "== ENV (subset) =="; echo "JAVA_HOME=$JAVA_HOME"; echo "NEO4J_HOME=$NEO4J_HOME"; echo "PATH=$PATH"
        echo "== CMD =="; echo "{{ neo4j_ctl }} start (chdir={{ neo4j_bin_dir }})"
        cd "{{ neo4j_bin_dir }}"
        "{{ neo4j_ctl }}" start
      args:
        executable: /bin/bash
      register: start_trace
      changed_when: start_trace.rc == 0

    - name: Show start output (bin)
      listen: "restart neo4j (bin)"
      when: not (neo4j_use_service | bool)
      debug:
        msg: |
          --- START rc={{ start_trace.rc | default('n/a') }} ---
          STDOUT:
          {{ start_trace.stdout | default('') }}
          STDERR:
          {{ start_trace.stderr | default('') }}

    - name: Wait for Bolt (bin)
      listen: "restart neo4j (bin)"
      when: not (neo4j_use_service | bool)
      wait_for:
        port: "{{ neo4j_wait_port }}"
        state: started
        timeout: 100
      changed_when: false

    - name: Verify process & port (bin)
      listen: "restart neo4j (bin)"
      when: not (neo4j_use_service | bool)
      shell: |
        set -euo pipefail
        echo "== ps (neo4j user) =="
        ps -u neo4j -o pid,cmd --no-headers | sed -n '1,200p' || true
        echo "== TCP port check =="
        ss -ltn | awk 'NR==1 || $4 ~ /:{{ neo4j_wait_port }}$/'
      args:
        executable: /bin/bash
      register: verify_out
      changed_when: false
      failed_when: false

    - name: Show verification (bin)
      listen: "restart neo4j (bin)"
      when: not (neo4j_use_service | bool)
      debug:
        msg: |
          --- VERIFY ---
          {{ verify_out.stdout | default('') }}

    - name: Tail logs after start (bin)
      listen: "restart neo4j (bin)"
      when: not (neo4j_use_service | bool)
      shell: |
        set -euo pipefail
        tail -n 120 "{{ neo4j_home }}/logs/neo4j.log" || true
      args:
        executable: /bin/bash
      register: tail_after_start
      changed_when: false
      failed_when: false

    - name: Show log tail (bin)
      listen: "restart neo4j (bin)"
      when: not (neo4j_use_service | bool)
      debug:
        msg: |
          --- neo4j.log (after start) ---
          {{ tail_after_start.stdout | default('') }}

    # -------- SERVICE MODE (systemd) --------
    - name: Restart service
      listen: "restart neo4j (svc)"
      when: (neo4j_use_service | bool)
      become: true
      become_user: root
      service:
        name: "{{ neo4j_service_name | default('neo4j') }}"
        state: restarted

    - name: Wait for Bolt (svc)
      listen: "restart neo4j (svc)"
      when: (neo4j_use_service | bool)
      wait_for:
        port: "{{ neo4j_wait_port }}"
        state: started
        timeout: 100
      changed_when: false
